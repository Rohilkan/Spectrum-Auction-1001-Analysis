{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np, pandas as pd, seaborn as sns\n",
    "from matplotlib import pyplot as plt\n",
    "import sklearn, re\n",
    "from sklearn.preprocessing import OneHotEncoder, MinMaxScaler, StandardScaler\n",
    "from sklearn.impute import SimpleImputer, KNNImputer\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LinearRegression, Ridge, Lasso\n",
    "from sklearn.metrics import mean_squared_error, mean_absolute_error, mean_absolute_percentage_error"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>call_sign</th>\n",
       "      <th>facility_id</th>\n",
       "      <th>dma</th>\n",
       "      <th>bidder</th>\n",
       "      <th>frn</th>\n",
       "      <th>pre_auction_band</th>\n",
       "      <th>winning_bid_option</th>\n",
       "      <th>compensation</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>WCDC-TV</td>\n",
       "      <td>74419</td>\n",
       "      <td>Albany-Schenectady-Troy, NY</td>\n",
       "      <td>NEXSTAR BROADCASTING, INC.</td>\n",
       "      <td>9961889</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>34558086</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>WAGT</td>\n",
       "      <td>70699</td>\n",
       "      <td>Augusta, GA</td>\n",
       "      <td>Gray Television Licensee, LLC</td>\n",
       "      <td>3748241</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>40763036</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>WUTB</td>\n",
       "      <td>60552</td>\n",
       "      <td>Baltimore, MD</td>\n",
       "      <td>Deerfield Media (Baltimore) Licensee, LLC</td>\n",
       "      <td>22739833</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>122912964</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>WBIN-TV</td>\n",
       "      <td>14682</td>\n",
       "      <td>Boston, MA</td>\n",
       "      <td>WBIN, Inc.</td>\n",
       "      <td>20871042</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>68081337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>WDPX-TV</td>\n",
       "      <td>6476</td>\n",
       "      <td>Boston, MA</td>\n",
       "      <td>ION Media Boston License, Inc.</td>\n",
       "      <td>3720208</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>43467644</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  call_sign  facility_id                          dma  \\\n",
       "0   WCDC-TV        74419  Albany-Schenectady-Troy, NY   \n",
       "1      WAGT        70699                  Augusta, GA   \n",
       "2      WUTB        60552                Baltimore, MD   \n",
       "3   WBIN-TV        14682                   Boston, MA   \n",
       "4   WDPX-TV         6476                   Boston, MA   \n",
       "\n",
       "                                      bidder       frn pre_auction_band  \\\n",
       "0                 NEXSTAR BROADCASTING, INC.   9961889              UHF   \n",
       "1              Gray Television Licensee, LLC   3748241              UHF   \n",
       "2  Deerfield Media (Baltimore) Licensee, LLC  22739833              UHF   \n",
       "3                                 WBIN, Inc.  20871042              UHF   \n",
       "4             ION Media Boston License, Inc.   3720208              UHF   \n",
       "\n",
       "  winning_bid_option  compensation  \n",
       "0         Go off-air      34558086  \n",
       "1         Go off-air      40763036  \n",
       "2         Go off-air     122912964  \n",
       "3         Go off-air      68081337  \n",
       "4         Go off-air      43467644  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "winBids = (pd.read_csv(\"data/winning_bids.csv\")\n",
    "        .drop([\"auction_id\", \"pre_auction_csa_flag\", \"post_auction_csa_flag\"],axis=1)\n",
    "        .rename({'bidder_as_of_closing_pn':\"bidder\", \"frn_as_of_closing_pn\":\"frn\"}, axis=1)\n",
    ")\n",
    "\n",
    "stdScale = StandardScaler()\n",
    "\n",
    "newfrn = OneHotEncoder().fit_transform(winBids.dma.to_numpy().reshape(-1,1))\n",
    "winBids.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>call_sign</th>\n",
       "      <th>facility_id</th>\n",
       "      <th>dma</th>\n",
       "      <th>bidder</th>\n",
       "      <th>frn</th>\n",
       "      <th>pre_auction_band</th>\n",
       "      <th>winning_bid_option</th>\n",
       "      <th>compensation</th>\n",
       "      <th>dmaLocal</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>WCDC-TV</td>\n",
       "      <td>74419</td>\n",
       "      <td>ALBANY-SCHENECTADY-TROY, NY</td>\n",
       "      <td>NEXSTAR BROADCASTING, INC.</td>\n",
       "      <td>9961889</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>34558086</td>\n",
       "      <td>ALBANY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>WAGT</td>\n",
       "      <td>70699</td>\n",
       "      <td>AUGUSTA, GA</td>\n",
       "      <td>Gray Television Licensee, LLC</td>\n",
       "      <td>3748241</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>40763036</td>\n",
       "      <td>AUGUSTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>WUTB</td>\n",
       "      <td>60552</td>\n",
       "      <td>BALTIMORE, MD</td>\n",
       "      <td>Deerfield Media (Baltimore) Licensee, LLC</td>\n",
       "      <td>22739833</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>122912964</td>\n",
       "      <td>BALTIMORE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>WBIN-TV</td>\n",
       "      <td>14682</td>\n",
       "      <td>BOSTON, MA</td>\n",
       "      <td>WBIN, Inc.</td>\n",
       "      <td>20871042</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>68081337</td>\n",
       "      <td>BOSTON</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>WDPX-TV</td>\n",
       "      <td>6476</td>\n",
       "      <td>BOSTON, MA</td>\n",
       "      <td>ION Media Boston License, Inc.</td>\n",
       "      <td>3720208</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>43467644</td>\n",
       "      <td>BOSTON</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  call_sign  facility_id                          dma  \\\n",
       "0   WCDC-TV        74419  ALBANY-SCHENECTADY-TROY, NY   \n",
       "1      WAGT        70699                  AUGUSTA, GA   \n",
       "2      WUTB        60552                BALTIMORE, MD   \n",
       "3   WBIN-TV        14682                   BOSTON, MA   \n",
       "4   WDPX-TV         6476                   BOSTON, MA   \n",
       "\n",
       "                                      bidder       frn pre_auction_band  \\\n",
       "0                 NEXSTAR BROADCASTING, INC.   9961889              UHF   \n",
       "1              Gray Television Licensee, LLC   3748241              UHF   \n",
       "2  Deerfield Media (Baltimore) Licensee, LLC  22739833              UHF   \n",
       "3                                 WBIN, Inc.  20871042              UHF   \n",
       "4             ION Media Boston License, Inc.   3720208              UHF   \n",
       "\n",
       "  winning_bid_option  compensation   dmaLocal  \n",
       "0         Go off-air      34558086     ALBANY  \n",
       "1         Go off-air      40763036    AUGUSTA  \n",
       "2         Go off-air     122912964  BALTIMORE  \n",
       "3         Go off-air      68081337     BOSTON  \n",
       "4         Go off-air      43467644     BOSTON  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "winBids.dma = winBids.dma.str.upper()\n",
    "winBids[\"dmaLocal\"] = winBids.dma.apply(lambda x: x.split(\"-\")[0].split(\",\")[0])\n",
    "winBids.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>dma</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bidder</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>All</th>\n",
       "      <td>175</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NEXSTAR BROADCASTING, INC.</th>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OTA Broadcasting (PIT), LLC</th>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Entravision Holdings, LLC</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Trinity Christian Center of Santa Ana, Inc.</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                             dma\n",
       "bidder                                          \n",
       "All                                          175\n",
       "NEXSTAR BROADCASTING, INC.                    10\n",
       "OTA Broadcasting (PIT), LLC                    5\n",
       "Entravision Holdings, LLC                      4\n",
       "Trinity Christian Center of Santa Ana, Inc.    4"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dmaByBids = (winBids.pivot_table(index=\"bidder\", values=\"dma\", aggfunc=\"count\", margins=True)\n",
    "            .sort_values(\"dma\", ascending=False)\n",
    ")\n",
    "dmaByBids.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>dma</th>\n",
       "      <th>zipcode</th>\n",
       "      <th>dmaLocal</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ABILENE - SWEETWATER</td>\n",
       "      <td>79699</td>\n",
       "      <td>ABILENE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ALBANY - SCHENECTADY - TROY</td>\n",
       "      <td>13470</td>\n",
       "      <td>ALBANY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ALBANY, GA</td>\n",
       "      <td>39885</td>\n",
       "      <td>ALBANY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>ALBUQUERQUE - SANTA FE</td>\n",
       "      <td>88439</td>\n",
       "      <td>ALBUQUERQUE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ALEXANDRIA, LA</td>\n",
       "      <td>71496</td>\n",
       "      <td>ALEXANDRIA</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           dma  zipcode      dmaLocal\n",
       "0         ABILENE - SWEETWATER    79699      ABILENE \n",
       "1  ALBANY - SCHENECTADY - TROY    13470       ALBANY \n",
       "2                   ALBANY, GA    39885        ALBANY\n",
       "3       ALBUQUERQUE - SANTA FE    88439  ALBUQUERQUE \n",
       "4               ALEXANDRIA, LA    71496    ALEXANDRIA"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dmaZip = pd.read_csv(\"data/dma_to_zipcode.csv\")\n",
    "dmaZip.rename({\"dma_description\":\"dma\", \"zip_code\":\"zipcode\"}, axis=1, inplace=True)\n",
    "dmaZip = pd.concat([dmaZip['zipcode'], dmaZip['dma']], axis=1)\n",
    "\n",
    "dmaZip = (dmaZip.pivot_table(index=\"dma\", aggfunc=\"max\", margins=True)\n",
    "        .reset_index()\n",
    ")\n",
    "\n",
    "dmaZip[\"dmaLocal\"]= dmaZip.dma.apply(lambda x: x.split(\"-\")[0].split(\",\")[0])\n",
    "dmaZip.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>call_sign</th>\n",
       "      <th>facility_id</th>\n",
       "      <th>dma</th>\n",
       "      <th>bidder</th>\n",
       "      <th>frn</th>\n",
       "      <th>pre_auction_band</th>\n",
       "      <th>winning_bid_option</th>\n",
       "      <th>compensation</th>\n",
       "      <th>dmaLocal</th>\n",
       "      <th>zipcode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>WCDC-TV</td>\n",
       "      <td>74419</td>\n",
       "      <td>ALBANY-SCHENECTADY-TROY, NY</td>\n",
       "      <td>NEXSTAR BROADCASTING, INC.</td>\n",
       "      <td>9961889</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>34558086</td>\n",
       "      <td>ALBANY</td>\n",
       "      <td>39885.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>WAGT</td>\n",
       "      <td>70699</td>\n",
       "      <td>AUGUSTA, GA</td>\n",
       "      <td>Gray Television Licensee, LLC</td>\n",
       "      <td>3748241</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>40763036</td>\n",
       "      <td>AUGUSTA</td>\n",
       "      <td>31045.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>WUTB</td>\n",
       "      <td>60552</td>\n",
       "      <td>BALTIMORE, MD</td>\n",
       "      <td>Deerfield Media (Baltimore) Licensee, LLC</td>\n",
       "      <td>22739833</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>122912964</td>\n",
       "      <td>BALTIMORE</td>\n",
       "      <td>21930.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>WIVB-TV</td>\n",
       "      <td>7780</td>\n",
       "      <td>BUFFALO, NY</td>\n",
       "      <td>NEXSTAR BROADCASTING, INC.</td>\n",
       "      <td>9961889</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>46015135</td>\n",
       "      <td>BUFFALO</td>\n",
       "      <td>17729.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>WNYB</td>\n",
       "      <td>30303</td>\n",
       "      <td>BUFFALO, NY</td>\n",
       "      <td>Faith Broadcasting Network, Inc.</td>\n",
       "      <td>7202963</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Move to Low-VHF</td>\n",
       "      <td>31960949</td>\n",
       "      <td>BUFFALO</td>\n",
       "      <td>17729.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   call_sign  facility_id                          dma  \\\n",
       "0    WCDC-TV        74419  ALBANY-SCHENECTADY-TROY, NY   \n",
       "1       WAGT        70699                  AUGUSTA, GA   \n",
       "2       WUTB        60552                BALTIMORE, MD   \n",
       "11   WIVB-TV         7780                  BUFFALO, NY   \n",
       "12      WNYB        30303                  BUFFALO, NY   \n",
       "\n",
       "                                       bidder       frn pre_auction_band  \\\n",
       "0                  NEXSTAR BROADCASTING, INC.   9961889              UHF   \n",
       "1               Gray Television Licensee, LLC   3748241              UHF   \n",
       "2   Deerfield Media (Baltimore) Licensee, LLC  22739833              UHF   \n",
       "11                 NEXSTAR BROADCASTING, INC.   9961889              UHF   \n",
       "12           Faith Broadcasting Network, Inc.   7202963              UHF   \n",
       "\n",
       "   winning_bid_option  compensation   dmaLocal  zipcode  \n",
       "0          Go off-air      34558086     ALBANY  39885.0  \n",
       "1          Go off-air      40763036    AUGUSTA  31045.0  \n",
       "2          Go off-air     122912964  BALTIMORE  21930.0  \n",
       "11         Go off-air      46015135    BUFFALO  17729.0  \n",
       "12    Move to Low-VHF      31960949    BUFFALO  17729.0  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bidZip = (winBids.merge(dmaZip, on=\"dmaLocal\", how = \"left\")\n",
    "            .dropna(axis=0)\n",
    "            .drop([\"dma_y\"], axis=1)\n",
    "            .rename({\"dma_x\":\"dma\"}, axis=1)\n",
    ")\n",
    "bidZip.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bidder</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>zipcode</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>93599</th>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18464</th>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19980</th>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26764</th>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26865</th>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61373</th>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53963</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47997</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45859</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17729</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         bidder\n",
       "zipcode        \n",
       "93599        12\n",
       "18464        10\n",
       "19980        10\n",
       "26764         8\n",
       "26865         8\n",
       "61373         6\n",
       "53963         4\n",
       "47997         3\n",
       "45859         3\n",
       "17729         3"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bidsByDma = (bidZip.pivot_table(index=\"zipcode\", values=\"bidder\", \n",
    "                aggfunc=\"count\")\n",
    "            .sort_values(\"bidder\", ascending=False)\n",
    "            .reset_index()\n",
    ")\n",
    "bidsByDma.zipcode = bidsByDma.zipcode.astype(int)\n",
    "bidsByDma.set_index(\"zipcode\", inplace=True)\n",
    "bidsByDma.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STATEFIPS</th>\n",
       "      <th>STATE</th>\n",
       "      <th>zipcode</th>\n",
       "      <th>agi_stub</th>\n",
       "      <th>N1</th>\n",
       "      <th>mars1</th>\n",
       "      <th>MARS2</th>\n",
       "      <th>MARS4</th>\n",
       "      <th>ELF</th>\n",
       "      <th>CPREP</th>\n",
       "      <th>...</th>\n",
       "      <th>N85300</th>\n",
       "      <th>A85300</th>\n",
       "      <th>N11901</th>\n",
       "      <th>A11901</th>\n",
       "      <th>N11900</th>\n",
       "      <th>A11900</th>\n",
       "      <th>N11902</th>\n",
       "      <th>A11902</th>\n",
       "      <th>N12000</th>\n",
       "      <th>A12000</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>166447</th>\n",
       "      <td>56</td>\n",
       "      <td>WY</td>\n",
       "      <td>99999</td>\n",
       "      <td>2</td>\n",
       "      <td>3490.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>940.0</td>\n",
       "      <td>440.0</td>\n",
       "      <td>3290.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>440.0</td>\n",
       "      <td>590.0</td>\n",
       "      <td>2930.0</td>\n",
       "      <td>8141.0</td>\n",
       "      <td>2880.0</td>\n",
       "      <td>7855.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>86.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166448</th>\n",
       "      <td>56</td>\n",
       "      <td>WY</td>\n",
       "      <td>99999</td>\n",
       "      <td>3</td>\n",
       "      <td>2350.0</td>\n",
       "      <td>1030.0</td>\n",
       "      <td>1080.0</td>\n",
       "      <td>200.0</td>\n",
       "      <td>2220.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>460.0</td>\n",
       "      <td>947.0</td>\n",
       "      <td>1800.0</td>\n",
       "      <td>5772.0</td>\n",
       "      <td>1720.0</td>\n",
       "      <td>5164.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>257.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166449</th>\n",
       "      <td>56</td>\n",
       "      <td>WY</td>\n",
       "      <td>99999</td>\n",
       "      <td>4</td>\n",
       "      <td>1700.0</td>\n",
       "      <td>530.0</td>\n",
       "      <td>1080.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>1630.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>410.0</td>\n",
       "      <td>1052.0</td>\n",
       "      <td>1230.0</td>\n",
       "      <td>4529.0</td>\n",
       "      <td>1160.0</td>\n",
       "      <td>4188.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>139.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166450</th>\n",
       "      <td>56</td>\n",
       "      <td>WY</td>\n",
       "      <td>99999</td>\n",
       "      <td>5</td>\n",
       "      <td>2560.0</td>\n",
       "      <td>420.0</td>\n",
       "      <td>2080.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>2470.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>820.0</td>\n",
       "      <td>3897.0</td>\n",
       "      <td>1660.0</td>\n",
       "      <td>8677.0</td>\n",
       "      <td>1480.0</td>\n",
       "      <td>7299.0</td>\n",
       "      <td>200.0</td>\n",
       "      <td>1036.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166451</th>\n",
       "      <td>56</td>\n",
       "      <td>WY</td>\n",
       "      <td>99999</td>\n",
       "      <td>6</td>\n",
       "      <td>830.0</td>\n",
       "      <td>160.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>850.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>510.0</td>\n",
       "      <td>3685.0</td>\n",
       "      <td>390.0</td>\n",
       "      <td>12002.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>18594.0</td>\n",
       "      <td>170.0</td>\n",
       "      <td>2893.0</td>\n",
       "      <td>230.0</td>\n",
       "      <td>13413.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 165 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        STATEFIPS STATE  zipcode  agi_stub      N1   mars1   MARS2  MARS4  \\\n",
       "166447         56    WY    99999         2  3490.0  2010.0   940.0  440.0   \n",
       "166448         56    WY    99999         3  2350.0  1030.0  1080.0  200.0   \n",
       "166449         56    WY    99999         4  1700.0   530.0  1080.0  100.0   \n",
       "166450         56    WY    99999         5  2560.0   420.0  2080.0   80.0   \n",
       "166451         56    WY    99999         6   830.0   160.0   700.0    0.0   \n",
       "\n",
       "           ELF  CPREP  ...  N85300  A85300  N11901   A11901  N11900   A11900  \\\n",
       "166447  3290.0   70.0  ...     0.0     0.0   440.0    590.0  2930.0   8141.0   \n",
       "166448  2220.0   50.0  ...     0.0     0.0   460.0    947.0  1800.0   5772.0   \n",
       "166449  1630.0   30.0  ...     0.0     0.0   410.0   1052.0  1230.0   4529.0   \n",
       "166450  2470.0   40.0  ...     0.0     0.0   820.0   3897.0  1660.0   8677.0   \n",
       "166451   850.0    0.0  ...   510.0  3685.0   390.0  12002.0   400.0  18594.0   \n",
       "\n",
       "        N11902  A11902  N12000   A12000  \n",
       "166447  2880.0  7855.0    50.0     86.0  \n",
       "166448  1720.0  5164.0    70.0    257.0  \n",
       "166449  1160.0  4188.0    50.0    139.0  \n",
       "166450  1480.0  7299.0   200.0   1036.0  \n",
       "166451   170.0  2893.0   230.0  13413.0  \n",
       "\n",
       "[5 rows x 165 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "census = pd.read_csv('data/census_zip.csv')\n",
    "census.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STATE</th>\n",
       "      <th>zipcode</th>\n",
       "      <th>agi_stub</th>\n",
       "      <th>income</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AL</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>25000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AL</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>50000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AL</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>75000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AL</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>100000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AL</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>200000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  STATE  zipcode  agi_stub  income\n",
       "0    AL        0         1   25000\n",
       "1    AL        0         2   50000\n",
       "2    AL        0         3   75000\n",
       "3    AL        0         4  100000\n",
       "4    AL        0         5  200000"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def toMoney(series):\n",
    "    if series == 1:\n",
    "        return 25000\n",
    "    if series == 2:\n",
    "        return 50000\n",
    "    if series == 3:\n",
    "        return 75000\n",
    "    if series == 4:\n",
    "        return 100000\n",
    "    if series == 5:\n",
    "        return 200000\n",
    "    if series == 6:\n",
    "        return 250000\n",
    "\n",
    "census[\"income\"] = census[\"agi_stub\"].apply(toMoney)\n",
    "\n",
    "for c in census.columns:\n",
    "    if \"MAR\" in c or \"mar\" in c or \"1\" in c or \"0\" in c \\\n",
    "        or \"5\" in c or \"F\" in c or \"R\" in c or \"VITA\" in c \\\n",
    "        or \"N\" in c or \"TCE\" in c:\n",
    "            census.drop(c, axis = 1, inplace=True)\n",
    "\n",
    "census.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>zipcode</th>\n",
       "      <th>STATE</th>\n",
       "      <th>agi_stub</th>\n",
       "      <th>income</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>WY</td>\n",
       "      <td>6</td>\n",
       "      <td>250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1001</td>\n",
       "      <td>MA</td>\n",
       "      <td>6</td>\n",
       "      <td>250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1002</td>\n",
       "      <td>MA</td>\n",
       "      <td>6</td>\n",
       "      <td>250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1005</td>\n",
       "      <td>MA</td>\n",
       "      <td>6</td>\n",
       "      <td>250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1007</td>\n",
       "      <td>MA</td>\n",
       "      <td>6</td>\n",
       "      <td>250000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   zipcode STATE  agi_stub  income\n",
       "0        0    WY         6  250000\n",
       "1     1001    MA         6  250000\n",
       "2     1002    MA         6  250000\n",
       "3     1005    MA         6  250000\n",
       "4     1007    MA         6  250000"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "censusByZip = (census.pivot_table(index=\"zipcode\", aggfunc=\"max\")\n",
    "                .reset_index()\n",
    ")\n",
    "censusByZip.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>call_sign</th>\n",
       "      <th>facility_id</th>\n",
       "      <th>dma</th>\n",
       "      <th>bidder</th>\n",
       "      <th>frn</th>\n",
       "      <th>pre_auction_band</th>\n",
       "      <th>winning_bid_option</th>\n",
       "      <th>compensation</th>\n",
       "      <th>dmaLocal</th>\n",
       "      <th>zipcode</th>\n",
       "      <th>STATE</th>\n",
       "      <th>agi_stub</th>\n",
       "      <th>income</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>WPBO</td>\n",
       "      <td>66190</td>\n",
       "      <td>CHARLESTON-HUNTINGTON, WV</td>\n",
       "      <td>THE OHIO STATE UNIVERSITY</td>\n",
       "      <td>6031983</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>8822670</td>\n",
       "      <td>CHARLESTON</td>\n",
       "      <td>29929.0</td>\n",
       "      <td>SC</td>\n",
       "      <td>6.0</td>\n",
       "      <td>250000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>WTSF</td>\n",
       "      <td>67798</td>\n",
       "      <td>CHARLESTON-HUNTINGTON, WV</td>\n",
       "      <td>Tri State Family Broadcasting, Inc</td>\n",
       "      <td>2011948</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Move to High-VHF</td>\n",
       "      <td>5540044</td>\n",
       "      <td>CHARLESTON</td>\n",
       "      <td>29929.0</td>\n",
       "      <td>SC</td>\n",
       "      <td>6.0</td>\n",
       "      <td>250000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>WLNN-CD</td>\n",
       "      <td>60888</td>\n",
       "      <td>CHARLOTTE, NC</td>\n",
       "      <td>Carolina Rays LLC</td>\n",
       "      <td>18324095</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>21321125</td>\n",
       "      <td>CHARLOTTE</td>\n",
       "      <td>29745.0</td>\n",
       "      <td>SC</td>\n",
       "      <td>6.0</td>\n",
       "      <td>250000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>WMYT-TV</td>\n",
       "      <td>20624</td>\n",
       "      <td>CHARLOTTE, NC</td>\n",
       "      <td>Fox Television Stations, LLC</td>\n",
       "      <td>5795067</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>74739363</td>\n",
       "      <td>CHARLOTTE</td>\n",
       "      <td>29745.0</td>\n",
       "      <td>SC</td>\n",
       "      <td>6.0</td>\n",
       "      <td>250000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>WTBL-CD</td>\n",
       "      <td>54983</td>\n",
       "      <td>CHARLOTTE, NC</td>\n",
       "      <td>OTA Broadcasting (CLT), LLC</td>\n",
       "      <td>21349188</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>8193916</td>\n",
       "      <td>CHARLOTTE</td>\n",
       "      <td>29745.0</td>\n",
       "      <td>SC</td>\n",
       "      <td>6.0</td>\n",
       "      <td>250000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   call_sign  facility_id                        dma  \\\n",
       "6       WPBO        66190  CHARLESTON-HUNTINGTON, WV   \n",
       "7       WTSF        67798  CHARLESTON-HUNTINGTON, WV   \n",
       "8    WLNN-CD        60888              CHARLOTTE, NC   \n",
       "9    WMYT-TV        20624              CHARLOTTE, NC   \n",
       "10   WTBL-CD        54983              CHARLOTTE, NC   \n",
       "\n",
       "                                bidder       frn pre_auction_band  \\\n",
       "6            THE OHIO STATE UNIVERSITY   6031983              UHF   \n",
       "7   Tri State Family Broadcasting, Inc   2011948              UHF   \n",
       "8                    Carolina Rays LLC  18324095              UHF   \n",
       "9         Fox Television Stations, LLC   5795067              UHF   \n",
       "10         OTA Broadcasting (CLT), LLC  21349188              UHF   \n",
       "\n",
       "   winning_bid_option  compensation    dmaLocal  zipcode STATE  agi_stub  \\\n",
       "6          Go off-air       8822670  CHARLESTON  29929.0    SC       6.0   \n",
       "7    Move to High-VHF       5540044  CHARLESTON  29929.0    SC       6.0   \n",
       "8          Go off-air      21321125   CHARLOTTE  29745.0    SC       6.0   \n",
       "9          Go off-air      74739363   CHARLOTTE  29745.0    SC       6.0   \n",
       "10         Go off-air       8193916   CHARLOTTE  29745.0    SC       6.0   \n",
       "\n",
       "      income  \n",
       "6   250000.0  \n",
       "7   250000.0  \n",
       "8   250000.0  \n",
       "9   250000.0  \n",
       "10  250000.0  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bidZipInc = (bidZip.merge(censusByZip, on=\"zipcode\", how=\"left\")\n",
    "            .dropna(axis=0)\n",
    ")\n",
    "bidZipInc.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>population</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>zipcode</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>602</th>\n",
       "      <td>2542040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>603</th>\n",
       "      <td>3348306</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>606</th>\n",
       "      <td>405000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>610</th>\n",
       "      <td>1776489</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>612</th>\n",
       "      <td>4102653</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         population\n",
       "zipcode            \n",
       "602         2542040\n",
       "603         3348306\n",
       "606          405000\n",
       "610         1776489\n",
       "612         4102653"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "popZip = pd.read_csv(\"data/pop_zip.csv\")\n",
    "popZip = pd.concat([popZip['zipcode'], popZip['population']],axis=1)\n",
    "popZip.population = popZip['population']*1000\n",
    "\n",
    "popZip = popZip.pivot_table(index=\"zipcode\", aggfunc=\"mean\")\n",
    "\n",
    "popZip.population = popZip.population.astype(int)\n",
    "popZip.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>call_sign</th>\n",
       "      <th>facility_id</th>\n",
       "      <th>dma</th>\n",
       "      <th>bidder</th>\n",
       "      <th>frn</th>\n",
       "      <th>pre_auction_band</th>\n",
       "      <th>winning_bid_option</th>\n",
       "      <th>compensation</th>\n",
       "      <th>dmaLocal</th>\n",
       "      <th>zipcode</th>\n",
       "      <th>STATE</th>\n",
       "      <th>agi_stub</th>\n",
       "      <th>income</th>\n",
       "      <th>population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>WPBO</td>\n",
       "      <td>66190</td>\n",
       "      <td>CHARLESTON-HUNTINGTON, WV</td>\n",
       "      <td>THE OHIO STATE UNIVERSITY</td>\n",
       "      <td>6031983</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>8822670</td>\n",
       "      <td>CHARLESTON</td>\n",
       "      <td>29929.0</td>\n",
       "      <td>SC</td>\n",
       "      <td>6.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>69489</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>WTSF</td>\n",
       "      <td>67798</td>\n",
       "      <td>CHARLESTON-HUNTINGTON, WV</td>\n",
       "      <td>Tri State Family Broadcasting, Inc</td>\n",
       "      <td>2011948</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Move to High-VHF</td>\n",
       "      <td>5540044</td>\n",
       "      <td>CHARLESTON</td>\n",
       "      <td>29929.0</td>\n",
       "      <td>SC</td>\n",
       "      <td>6.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>69489</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>WLNN-CD</td>\n",
       "      <td>60888</td>\n",
       "      <td>CHARLOTTE, NC</td>\n",
       "      <td>Carolina Rays LLC</td>\n",
       "      <td>18324095</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>21321125</td>\n",
       "      <td>CHARLOTTE</td>\n",
       "      <td>29745.0</td>\n",
       "      <td>SC</td>\n",
       "      <td>6.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>1770551</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>WMYT-TV</td>\n",
       "      <td>20624</td>\n",
       "      <td>CHARLOTTE, NC</td>\n",
       "      <td>Fox Television Stations, LLC</td>\n",
       "      <td>5795067</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>74739363</td>\n",
       "      <td>CHARLOTTE</td>\n",
       "      <td>29745.0</td>\n",
       "      <td>SC</td>\n",
       "      <td>6.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>1770551</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>WTBL-CD</td>\n",
       "      <td>54983</td>\n",
       "      <td>CHARLOTTE, NC</td>\n",
       "      <td>OTA Broadcasting (CLT), LLC</td>\n",
       "      <td>21349188</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>8193916</td>\n",
       "      <td>CHARLOTTE</td>\n",
       "      <td>29745.0</td>\n",
       "      <td>SC</td>\n",
       "      <td>6.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>1770551</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  call_sign  facility_id                        dma  \\\n",
       "0      WPBO        66190  CHARLESTON-HUNTINGTON, WV   \n",
       "1      WTSF        67798  CHARLESTON-HUNTINGTON, WV   \n",
       "2   WLNN-CD        60888              CHARLOTTE, NC   \n",
       "3   WMYT-TV        20624              CHARLOTTE, NC   \n",
       "4   WTBL-CD        54983              CHARLOTTE, NC   \n",
       "\n",
       "                               bidder       frn pre_auction_band  \\\n",
       "0           THE OHIO STATE UNIVERSITY   6031983              UHF   \n",
       "1  Tri State Family Broadcasting, Inc   2011948              UHF   \n",
       "2                   Carolina Rays LLC  18324095              UHF   \n",
       "3        Fox Television Stations, LLC   5795067              UHF   \n",
       "4         OTA Broadcasting (CLT), LLC  21349188              UHF   \n",
       "\n",
       "  winning_bid_option  compensation    dmaLocal  zipcode STATE  agi_stub  \\\n",
       "0         Go off-air       8822670  CHARLESTON  29929.0    SC       6.0   \n",
       "1   Move to High-VHF       5540044  CHARLESTON  29929.0    SC       6.0   \n",
       "2         Go off-air      21321125   CHARLOTTE  29745.0    SC       6.0   \n",
       "3         Go off-air      74739363   CHARLOTTE  29745.0    SC       6.0   \n",
       "4         Go off-air       8193916   CHARLOTTE  29745.0    SC       6.0   \n",
       "\n",
       "     income  population  \n",
       "0  250000.0       69489  \n",
       "1  250000.0       69489  \n",
       "2  250000.0     1770551  \n",
       "3  250000.0     1770551  \n",
       "4  250000.0     1770551  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bidZipIncPop = (bidZipInc.merge(popZip, on=\"zipcode\", how=\"left\")\n",
    "            .dropna(axis=0)\n",
    ")\n",
    "bidZipIncPop.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>call_sign</th>\n",
       "      <th>facility_id</th>\n",
       "      <th>dma</th>\n",
       "      <th>bidder</th>\n",
       "      <th>frn</th>\n",
       "      <th>pre_auction_band</th>\n",
       "      <th>winning_bid_option</th>\n",
       "      <th>compensation</th>\n",
       "      <th>dmaLocal</th>\n",
       "      <th>zipcode</th>\n",
       "      <th>STATE</th>\n",
       "      <th>agi_stub</th>\n",
       "      <th>income</th>\n",
       "      <th>population</th>\n",
       "      <th>pop_by_income</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>WPBO</td>\n",
       "      <td>66190</td>\n",
       "      <td>CHARLESTON-HUNTINGTON, WV</td>\n",
       "      <td>THE OHIO STATE UNIVERSITY</td>\n",
       "      <td>6031983</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>8822670</td>\n",
       "      <td>CHARLESTON</td>\n",
       "      <td>29929.0</td>\n",
       "      <td>SC</td>\n",
       "      <td>6.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>69489</td>\n",
       "      <td>17372250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>WTSF</td>\n",
       "      <td>67798</td>\n",
       "      <td>CHARLESTON-HUNTINGTON, WV</td>\n",
       "      <td>Tri State Family Broadcasting, Inc</td>\n",
       "      <td>2011948</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Move to High-VHF</td>\n",
       "      <td>5540044</td>\n",
       "      <td>CHARLESTON</td>\n",
       "      <td>29929.0</td>\n",
       "      <td>SC</td>\n",
       "      <td>6.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>69489</td>\n",
       "      <td>17372250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>WLNN-CD</td>\n",
       "      <td>60888</td>\n",
       "      <td>CHARLOTTE, NC</td>\n",
       "      <td>Carolina Rays LLC</td>\n",
       "      <td>18324095</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>21321125</td>\n",
       "      <td>CHARLOTTE</td>\n",
       "      <td>29745.0</td>\n",
       "      <td>SC</td>\n",
       "      <td>6.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>1770551</td>\n",
       "      <td>442637750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>WMYT-TV</td>\n",
       "      <td>20624</td>\n",
       "      <td>CHARLOTTE, NC</td>\n",
       "      <td>Fox Television Stations, LLC</td>\n",
       "      <td>5795067</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>74739363</td>\n",
       "      <td>CHARLOTTE</td>\n",
       "      <td>29745.0</td>\n",
       "      <td>SC</td>\n",
       "      <td>6.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>1770551</td>\n",
       "      <td>442637750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>WTBL-CD</td>\n",
       "      <td>54983</td>\n",
       "      <td>CHARLOTTE, NC</td>\n",
       "      <td>OTA Broadcasting (CLT), LLC</td>\n",
       "      <td>21349188</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>8193916</td>\n",
       "      <td>CHARLOTTE</td>\n",
       "      <td>29745.0</td>\n",
       "      <td>SC</td>\n",
       "      <td>6.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>1770551</td>\n",
       "      <td>442637750000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  call_sign  facility_id                        dma  \\\n",
       "0      WPBO        66190  CHARLESTON-HUNTINGTON, WV   \n",
       "1      WTSF        67798  CHARLESTON-HUNTINGTON, WV   \n",
       "2   WLNN-CD        60888              CHARLOTTE, NC   \n",
       "3   WMYT-TV        20624              CHARLOTTE, NC   \n",
       "4   WTBL-CD        54983              CHARLOTTE, NC   \n",
       "\n",
       "                               bidder       frn pre_auction_band  \\\n",
       "0           THE OHIO STATE UNIVERSITY   6031983              UHF   \n",
       "1  Tri State Family Broadcasting, Inc   2011948              UHF   \n",
       "2                   Carolina Rays LLC  18324095              UHF   \n",
       "3        Fox Television Stations, LLC   5795067              UHF   \n",
       "4         OTA Broadcasting (CLT), LLC  21349188              UHF   \n",
       "\n",
       "  winning_bid_option  compensation    dmaLocal  zipcode STATE  agi_stub  \\\n",
       "0         Go off-air       8822670  CHARLESTON  29929.0    SC       6.0   \n",
       "1   Move to High-VHF       5540044  CHARLESTON  29929.0    SC       6.0   \n",
       "2         Go off-air      21321125   CHARLOTTE  29745.0    SC       6.0   \n",
       "3         Go off-air      74739363   CHARLOTTE  29745.0    SC       6.0   \n",
       "4         Go off-air       8193916   CHARLOTTE  29745.0    SC       6.0   \n",
       "\n",
       "     income  population  pop_by_income  \n",
       "0  250000.0       69489    17372250000  \n",
       "1  250000.0       69489    17372250000  \n",
       "2  250000.0     1770551   442637750000  \n",
       "3  250000.0     1770551   442637750000  \n",
       "4  250000.0     1770551   442637750000  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bidZipIncPop.eval(\"pop_by_income = population * income\", inplace=True)\n",
    "bidZipIncPop.pop_by_income = bidZipIncPop.pop_by_income.astype(int)\n",
    "bidZipIncPop.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>call_sign</th>\n",
       "      <th>facility_id</th>\n",
       "      <th>dma</th>\n",
       "      <th>bidder</th>\n",
       "      <th>frn</th>\n",
       "      <th>pre_auction_band</th>\n",
       "      <th>winning_bid_option</th>\n",
       "      <th>compensation</th>\n",
       "      <th>zipcode</th>\n",
       "      <th>income</th>\n",
       "      <th>population</th>\n",
       "      <th>pop_by_income</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>WPBO</td>\n",
       "      <td>66190</td>\n",
       "      <td>CHARLESTON-HUNTINGTON, WV</td>\n",
       "      <td>THE OHIO STATE UNIVERSITY</td>\n",
       "      <td>6031983</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>8822670</td>\n",
       "      <td>29929.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>69489</td>\n",
       "      <td>17372250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>WTSF</td>\n",
       "      <td>67798</td>\n",
       "      <td>CHARLESTON-HUNTINGTON, WV</td>\n",
       "      <td>Tri State Family Broadcasting, Inc</td>\n",
       "      <td>2011948</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Move to High-VHF</td>\n",
       "      <td>5540044</td>\n",
       "      <td>29929.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>69489</td>\n",
       "      <td>17372250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>WLNN-CD</td>\n",
       "      <td>60888</td>\n",
       "      <td>CHARLOTTE, NC</td>\n",
       "      <td>Carolina Rays LLC</td>\n",
       "      <td>18324095</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>21321125</td>\n",
       "      <td>29745.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>1770551</td>\n",
       "      <td>442637750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>WMYT-TV</td>\n",
       "      <td>20624</td>\n",
       "      <td>CHARLOTTE, NC</td>\n",
       "      <td>Fox Television Stations, LLC</td>\n",
       "      <td>5795067</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>74739363</td>\n",
       "      <td>29745.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>1770551</td>\n",
       "      <td>442637750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>WTBL-CD</td>\n",
       "      <td>54983</td>\n",
       "      <td>CHARLOTTE, NC</td>\n",
       "      <td>OTA Broadcasting (CLT), LLC</td>\n",
       "      <td>21349188</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>8193916</td>\n",
       "      <td>29745.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>1770551</td>\n",
       "      <td>442637750000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  call_sign  facility_id                        dma  \\\n",
       "0      WPBO        66190  CHARLESTON-HUNTINGTON, WV   \n",
       "1      WTSF        67798  CHARLESTON-HUNTINGTON, WV   \n",
       "2   WLNN-CD        60888              CHARLOTTE, NC   \n",
       "3   WMYT-TV        20624              CHARLOTTE, NC   \n",
       "4   WTBL-CD        54983              CHARLOTTE, NC   \n",
       "\n",
       "                               bidder       frn pre_auction_band  \\\n",
       "0           THE OHIO STATE UNIVERSITY   6031983              UHF   \n",
       "1  Tri State Family Broadcasting, Inc   2011948              UHF   \n",
       "2                   Carolina Rays LLC  18324095              UHF   \n",
       "3        Fox Television Stations, LLC   5795067              UHF   \n",
       "4         OTA Broadcasting (CLT), LLC  21349188              UHF   \n",
       "\n",
       "  winning_bid_option  compensation  zipcode    income  population  \\\n",
       "0         Go off-air       8822670  29929.0  250000.0       69489   \n",
       "1   Move to High-VHF       5540044  29929.0  250000.0       69489   \n",
       "2         Go off-air      21321125  29745.0  250000.0     1770551   \n",
       "3         Go off-air      74739363  29745.0  250000.0     1770551   \n",
       "4         Go off-air       8193916  29745.0  250000.0     1770551   \n",
       "\n",
       "   pop_by_income  \n",
       "0    17372250000  \n",
       "1    17372250000  \n",
       "2   442637750000  \n",
       "3   442637750000  \n",
       "4   442637750000  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bidZipIncPop = (bidZipIncPop.drop([\"agi_stub\", \"STATE\", \"dmaLocal\"],axis=1)\n",
    ")\n",
    "bidZipIncPop.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>call_sign</th>\n",
       "      <th>facility_id</th>\n",
       "      <th>dma</th>\n",
       "      <th>bidder</th>\n",
       "      <th>frn</th>\n",
       "      <th>pre_auction_band</th>\n",
       "      <th>winning_bid_option</th>\n",
       "      <th>compensation</th>\n",
       "      <th>zipcode</th>\n",
       "      <th>income</th>\n",
       "      <th>population</th>\n",
       "      <th>pop_by_income</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>WWTO-TV</td>\n",
       "      <td>998</td>\n",
       "      <td>CHICAGO, IL</td>\n",
       "      <td>Trinity Christian Center of Santa Ana, Inc.</td>\n",
       "      <td>3791712</td>\n",
       "      <td>High-VHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>304250040</td>\n",
       "      <td>61373.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>124346</td>\n",
       "      <td>31086500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>WNBC</td>\n",
       "      <td>47535</td>\n",
       "      <td>NEW YORK, NY</td>\n",
       "      <td>NBC Telemundo License LLC</td>\n",
       "      <td>19509470</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>214023017</td>\n",
       "      <td>18464.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>73040</td>\n",
       "      <td>18260000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>WRNN-TV</td>\n",
       "      <td>74156</td>\n",
       "      <td>NEW YORK, NY</td>\n",
       "      <td>WRNN License Company, LLC</td>\n",
       "      <td>10622041</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>211680472</td>\n",
       "      <td>18464.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>73040</td>\n",
       "      <td>18260000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>WXTV-DT</td>\n",
       "      <td>74215</td>\n",
       "      <td>NEW YORK, NY</td>\n",
       "      <td>WXTV License Partnership, G.P.</td>\n",
       "      <td>1531243</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>198965211</td>\n",
       "      <td>18464.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>73040</td>\n",
       "      <td>18260000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>WNJN</td>\n",
       "      <td>48477</td>\n",
       "      <td>NEW YORK, NY</td>\n",
       "      <td>New Jersey Public Broadcasting Authority</td>\n",
       "      <td>4368007</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>193892273</td>\n",
       "      <td>18464.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>73040</td>\n",
       "      <td>18260000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   call_sign  facility_id           dma  \\\n",
       "11   WWTO-TV          998   CHICAGO, IL   \n",
       "38      WNBC        47535  NEW YORK, NY   \n",
       "41   WRNN-TV        74156  NEW YORK, NY   \n",
       "43   WXTV-DT        74215  NEW YORK, NY   \n",
       "39      WNJN        48477  NEW YORK, NY   \n",
       "\n",
       "                                         bidder       frn pre_auction_band  \\\n",
       "11  Trinity Christian Center of Santa Ana, Inc.   3791712         High-VHF   \n",
       "38                    NBC Telemundo License LLC  19509470              UHF   \n",
       "41                    WRNN License Company, LLC  10622041              UHF   \n",
       "43               WXTV License Partnership, G.P.   1531243              UHF   \n",
       "39     New Jersey Public Broadcasting Authority   4368007              UHF   \n",
       "\n",
       "   winning_bid_option  compensation  zipcode    income  population  \\\n",
       "11         Go off-air     304250040  61373.0  250000.0      124346   \n",
       "38         Go off-air     214023017  18464.0  250000.0       73040   \n",
       "41         Go off-air     211680472  18464.0  250000.0       73040   \n",
       "43         Go off-air     198965211  18464.0  250000.0       73040   \n",
       "39         Go off-air     193892273  18464.0  250000.0       73040   \n",
       "\n",
       "    pop_by_income  \n",
       "11    31086500000  \n",
       "38    18260000000  \n",
       "41    18260000000  \n",
       "43    18260000000  \n",
       "39    18260000000  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bidZipIncPop.sort_values(\"compensation\", ascending=False, inplace=True)\n",
    "#bidZipIncPop.to_csv(\"data/merged_bid_data.csv\")\n",
    "bidZipIncPop.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1728x1152 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot, axes = plt.subplots(1,3, figsize=(24,16), sharey=True)\n",
    "\n",
    "#palette = sns.color_palette()\n",
    "#sns.set_palette(palette=palette)\n",
    "\n",
    "ax1 = sns.scatterplot(ax=axes[0], data=bidZipIncPop, x=\"pop_by_income\", y=\"compensation\", hue=\"pre_auction_band\")\n",
    "ax2 = sns.scatterplot(ax=axes[1], data=bidZipIncPop, x=\"population\", y=\"compensation\", hue=\"pre_auction_band\")\n",
    "ax3 = sns.stripplot(ax=axes[2], data=bidZipIncPop, x=\"winning_bid_option\", y=\"compensation\", hue=\"pre_auction_band\")\n",
    "\n",
    "fig = plot.get_figure()\n",
    "fig.savefig(\"graphs/bid_scatters.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>num_bidders</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>zipcode</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>93599</th>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18464</th>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19980</th>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26764</th>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26865</th>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         num_bidders\n",
       "zipcode             \n",
       "93599             12\n",
       "18464             10\n",
       "19980             10\n",
       "26764              8\n",
       "26865              8"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bidsByDma = (bidsByDma.rename({\"bidder\":\"num_bidders\"},axis=1))\n",
    "bidsByDma.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>call_sign</th>\n",
       "      <th>facility_id</th>\n",
       "      <th>dma</th>\n",
       "      <th>bidder</th>\n",
       "      <th>frn</th>\n",
       "      <th>pre_auction_band</th>\n",
       "      <th>winning_bid_option</th>\n",
       "      <th>compensation</th>\n",
       "      <th>zipcode</th>\n",
       "      <th>income</th>\n",
       "      <th>population</th>\n",
       "      <th>pop_by_income</th>\n",
       "      <th>num_bidders</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>WWTO-TV</td>\n",
       "      <td>998.0</td>\n",
       "      <td>CHICAGO, IL</td>\n",
       "      <td>Trinity Christian Center of Santa Ana, Inc.</td>\n",
       "      <td>3791712.0</td>\n",
       "      <td>High-VHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>304250040.0</td>\n",
       "      <td>61373.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>124346.0</td>\n",
       "      <td>3.108650e+10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>WPWR-TV</td>\n",
       "      <td>48772.0</td>\n",
       "      <td>CHICAGO, IL</td>\n",
       "      <td>Fox Television Stations, LLC</td>\n",
       "      <td>5795067.0</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>160748259.0</td>\n",
       "      <td>61373.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>124346.0</td>\n",
       "      <td>3.108650e+10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>WSNS-TV</td>\n",
       "      <td>70119.0</td>\n",
       "      <td>CHICAGO, IL</td>\n",
       "      <td>NBC Telemundo License LLC</td>\n",
       "      <td>19509470.0</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>141658837.0</td>\n",
       "      <td>61373.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>124346.0</td>\n",
       "      <td>3.108650e+10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>WXFT-DT</td>\n",
       "      <td>60539.0</td>\n",
       "      <td>CHICAGO, IL</td>\n",
       "      <td>UniMas Chicago LLC</td>\n",
       "      <td>3770898.0</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>126107725.0</td>\n",
       "      <td>61373.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>124346.0</td>\n",
       "      <td>3.108650e+10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>WYCC</td>\n",
       "      <td>12279.0</td>\n",
       "      <td>CHICAGO, IL</td>\n",
       "      <td>BD TRUSTEES COMM COLLEGE DIST # 508, CTY COOK, IL</td>\n",
       "      <td>6754626.0</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>15959957.0</td>\n",
       "      <td>61373.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>124346.0</td>\n",
       "      <td>3.108650e+10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  call_sign  facility_id          dma  \\\n",
       "0   WWTO-TV        998.0  CHICAGO, IL   \n",
       "1   WPWR-TV      48772.0  CHICAGO, IL   \n",
       "2   WSNS-TV      70119.0  CHICAGO, IL   \n",
       "3   WXFT-DT      60539.0  CHICAGO, IL   \n",
       "4      WYCC      12279.0  CHICAGO, IL   \n",
       "\n",
       "                                              bidder         frn  \\\n",
       "0        Trinity Christian Center of Santa Ana, Inc.   3791712.0   \n",
       "1                       Fox Television Stations, LLC   5795067.0   \n",
       "2                          NBC Telemundo License LLC  19509470.0   \n",
       "3                                 UniMas Chicago LLC   3770898.0   \n",
       "4  BD TRUSTEES COMM COLLEGE DIST # 508, CTY COOK, IL   6754626.0   \n",
       "\n",
       "  pre_auction_band winning_bid_option  compensation  zipcode    income  \\\n",
       "0         High-VHF         Go off-air   304250040.0  61373.0  250000.0   \n",
       "1              UHF         Go off-air   160748259.0  61373.0  250000.0   \n",
       "2              UHF         Go off-air   141658837.0  61373.0  250000.0   \n",
       "3              UHF         Go off-air   126107725.0  61373.0  250000.0   \n",
       "4              UHF         Go off-air    15959957.0  61373.0  250000.0   \n",
       "\n",
       "   population  pop_by_income  num_bidders  \n",
       "0    124346.0   3.108650e+10            6  \n",
       "1    124346.0   3.108650e+10            6  \n",
       "2    124346.0   3.108650e+10            6  \n",
       "3    124346.0   3.108650e+10            6  \n",
       "4    124346.0   3.108650e+10            6  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bidPer = bidZipIncPop.merge(bidsByDma, how=\"outer\", on=\"zipcode\")\n",
    "bidPer.to_csv(\"data/merged_bid_data.csv\")\n",
    "bidPer.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>call_sign</th>\n",
       "      <th>facility_id</th>\n",
       "      <th>dma</th>\n",
       "      <th>bidder</th>\n",
       "      <th>frn</th>\n",
       "      <th>pre_auction_band</th>\n",
       "      <th>winning_bid_option</th>\n",
       "      <th>compensation</th>\n",
       "      <th>zipcode</th>\n",
       "      <th>income</th>\n",
       "      <th>population</th>\n",
       "      <th>num_bidders</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>WWTO-TV</td>\n",
       "      <td>998.0</td>\n",
       "      <td>CHICAGO, IL</td>\n",
       "      <td>Trinity Christian Center of Santa Ana, Inc.</td>\n",
       "      <td>3791712.0</td>\n",
       "      <td>High-VHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>304.250040</td>\n",
       "      <td>61373.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>124346.0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>WNBC</td>\n",
       "      <td>47535.0</td>\n",
       "      <td>NEW YORK, NY</td>\n",
       "      <td>NBC Telemundo License LLC</td>\n",
       "      <td>19509470.0</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>214.023017</td>\n",
       "      <td>18464.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>73040.0</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>WRNN-TV</td>\n",
       "      <td>74156.0</td>\n",
       "      <td>NEW YORK, NY</td>\n",
       "      <td>WRNN License Company, LLC</td>\n",
       "      <td>10622041.0</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>211.680472</td>\n",
       "      <td>18464.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>73040.0</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>WXTV-DT</td>\n",
       "      <td>74215.0</td>\n",
       "      <td>NEW YORK, NY</td>\n",
       "      <td>WXTV License Partnership, G.P.</td>\n",
       "      <td>1531243.0</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>198.965211</td>\n",
       "      <td>18464.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>73040.0</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>WNJN</td>\n",
       "      <td>48477.0</td>\n",
       "      <td>NEW YORK, NY</td>\n",
       "      <td>New Jersey Public Broadcasting Authority</td>\n",
       "      <td>4368007.0</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>193.892273</td>\n",
       "      <td>18464.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>73040.0</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  call_sign  facility_id           dma  \\\n",
       "0   WWTO-TV        998.0   CHICAGO, IL   \n",
       "6      WNBC      47535.0  NEW YORK, NY   \n",
       "7   WRNN-TV      74156.0  NEW YORK, NY   \n",
       "8   WXTV-DT      74215.0  NEW YORK, NY   \n",
       "9      WNJN      48477.0  NEW YORK, NY   \n",
       "\n",
       "                                        bidder         frn pre_auction_band  \\\n",
       "0  Trinity Christian Center of Santa Ana, Inc.   3791712.0         High-VHF   \n",
       "6                    NBC Telemundo License LLC  19509470.0              UHF   \n",
       "7                    WRNN License Company, LLC  10622041.0              UHF   \n",
       "8               WXTV License Partnership, G.P.   1531243.0              UHF   \n",
       "9     New Jersey Public Broadcasting Authority   4368007.0              UHF   \n",
       "\n",
       "  winning_bid_option  compensation  zipcode    income  population  num_bidders  \n",
       "0         Go off-air    304.250040  61373.0  250000.0    124346.0            6  \n",
       "6         Go off-air    214.023017  18464.0  250000.0     73040.0           10  \n",
       "7         Go off-air    211.680472  18464.0  250000.0     73040.0           10  \n",
       "8         Go off-air    198.965211  18464.0  250000.0     73040.0           10  \n",
       "9         Go off-air    193.892273  18464.0  250000.0     73040.0           10  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "if np.max(bidPer[\"compensation\"] > 100000000):\n",
    "    bidPer[\"compensation\"] = bidPer[\"compensation\"] / 1000000\n",
    "bidPer = (\n",
    "    bidPer.sort_values([\"compensation\", \"num_bidders\", \"population\"], ascending=False)\n",
    "    .drop([\"pop_by_income\"], axis=1)\n",
    ")\n",
    "bidPer.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean square error: 0.03636022878734446\n",
      "Mean absolute error: 0.14540352891901176\n",
      "Mean absolute percentage error: 5219771015852.512\n"
     ]
    }
   ],
   "source": [
    "bidModel = LinearRegression(fit_intercept = True)\n",
    "\n",
    "normalComp = (MinMaxScaler()\n",
    "    .fit_transform(bidPer[\"compensation\"][:66]\n",
    "    .to_numpy()\n",
    "    .reshape(-1,1)))\n",
    "\n",
    "xVars = np.concatenate([bidPer[\"population\"].values, \n",
    "                        bidPer[\"num_bidders\"].values])\n",
    "\n",
    "xVar = (bidPer[\"num_bidders\"][:66]\n",
    "    .to_numpy()\n",
    "    .reshape(-1,1))\n",
    "    \n",
    "yVar = normalComp\n",
    "\n",
    "bidModel.fit(X=xVar, y=yVar)\n",
    "bidPredict = bidModel.predict(X=xVar)\n",
    "print(f\"Mean square error: {mean_squared_error(yVar, bidPredict)}\")\n",
    "print(f\"Mean absolute error: {mean_absolute_error(yVar, bidPredict)}\")\n",
    "print(f\"Mean absolute percentage error: {mean_absolute_percentage_error(yVar, bidPredict)}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/0f/j4jr12k11rn02k94sy347xgm0000gn/T/ipykernel_96300/3146723863.py:1: DtypeWarning: Columns (2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  ageCensus = pd.read_csv(\"data/age_census.csv\")\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "40.5    216\n",
      "40.1    206\n",
      "39.8    196\n",
      "40.9    193\n",
      "40.4    190\n",
      "       ... \n",
      "78.7      1\n",
      "79.0      1\n",
      "79.2      1\n",
      "79.9      1\n",
      "3.7       1\n",
      "Name: age, Length: 720, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "ageCensus = pd.read_csv(\"data/age_census.csv\")\n",
    "#ageCensus.columns = ageCensus.iloc[0]\n",
    "\n",
    "#ageCensus = ageCensus.iloc[1:,]\n",
    "ageCensus[\"zipcode\"] = ageCensus[\"NAME\"].apply(lambda x: x.split()[1])\n",
    "\n",
    "ageCensus = (pd.concat([ageCensus[\"zipcode\"], ageCensus[\"S0101_C01_032E\"]],axis=1)\n",
    "            .iloc[1:,:]\n",
    "            .rename({\"S0101_C01_032E\":\"age\"},axis=1)\n",
    ")\n",
    "ageCensus.zipcode = ageCensus.zipcode.astype(np.float64)\n",
    "\n",
    "ageCensus[\"age\"] = pd.to_numeric(ageCensus[\"age\"], errors=\"coerce\")\n",
    "\n",
    "ageCensus.sort_values(\"age\",ascending=False, inplace=True)\n",
    "ageCensus.head()\n",
    "print(ageCensus.age.value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>call_sign</th>\n",
       "      <th>facility_id</th>\n",
       "      <th>dma</th>\n",
       "      <th>bidder</th>\n",
       "      <th>frn</th>\n",
       "      <th>pre_auction_band</th>\n",
       "      <th>winning_bid_option</th>\n",
       "      <th>compensation</th>\n",
       "      <th>zipcode</th>\n",
       "      <th>income</th>\n",
       "      <th>population</th>\n",
       "      <th>num_bidders</th>\n",
       "      <th>age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>WWTO-TV</td>\n",
       "      <td>998.0</td>\n",
       "      <td>CHICAGO, IL</td>\n",
       "      <td>Trinity Christian Center of Santa Ana, Inc.</td>\n",
       "      <td>3791712.0</td>\n",
       "      <td>High-VHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>304.250040</td>\n",
       "      <td>61373.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>124346.0</td>\n",
       "      <td>6</td>\n",
       "      <td>44.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>WPWR-TV</td>\n",
       "      <td>48772.0</td>\n",
       "      <td>CHICAGO, IL</td>\n",
       "      <td>Fox Television Stations, LLC</td>\n",
       "      <td>5795067.0</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>160.748259</td>\n",
       "      <td>61373.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>124346.0</td>\n",
       "      <td>6</td>\n",
       "      <td>44.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>WSNS-TV</td>\n",
       "      <td>70119.0</td>\n",
       "      <td>CHICAGO, IL</td>\n",
       "      <td>NBC Telemundo License LLC</td>\n",
       "      <td>19509470.0</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>141.658837</td>\n",
       "      <td>61373.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>124346.0</td>\n",
       "      <td>6</td>\n",
       "      <td>44.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>WXFT-DT</td>\n",
       "      <td>60539.0</td>\n",
       "      <td>CHICAGO, IL</td>\n",
       "      <td>UniMas Chicago LLC</td>\n",
       "      <td>3770898.0</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>126.107725</td>\n",
       "      <td>61373.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>124346.0</td>\n",
       "      <td>6</td>\n",
       "      <td>44.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>WYCC</td>\n",
       "      <td>12279.0</td>\n",
       "      <td>CHICAGO, IL</td>\n",
       "      <td>BD TRUSTEES COMM COLLEGE DIST # 508, CTY COOK, IL</td>\n",
       "      <td>6754626.0</td>\n",
       "      <td>UHF</td>\n",
       "      <td>Go off-air</td>\n",
       "      <td>15.959957</td>\n",
       "      <td>61373.0</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>124346.0</td>\n",
       "      <td>6</td>\n",
       "      <td>44.8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  call_sign  facility_id          dma  \\\n",
       "0   WWTO-TV        998.0  CHICAGO, IL   \n",
       "1   WPWR-TV      48772.0  CHICAGO, IL   \n",
       "2   WSNS-TV      70119.0  CHICAGO, IL   \n",
       "3   WXFT-DT      60539.0  CHICAGO, IL   \n",
       "4      WYCC      12279.0  CHICAGO, IL   \n",
       "\n",
       "                                              bidder         frn  \\\n",
       "0        Trinity Christian Center of Santa Ana, Inc.   3791712.0   \n",
       "1                       Fox Television Stations, LLC   5795067.0   \n",
       "2                          NBC Telemundo License LLC  19509470.0   \n",
       "3                                 UniMas Chicago LLC   3770898.0   \n",
       "4  BD TRUSTEES COMM COLLEGE DIST # 508, CTY COOK, IL   6754626.0   \n",
       "\n",
       "  pre_auction_band winning_bid_option  compensation  zipcode    income  \\\n",
       "0         High-VHF         Go off-air    304.250040  61373.0  250000.0   \n",
       "1              UHF         Go off-air    160.748259  61373.0  250000.0   \n",
       "2              UHF         Go off-air    141.658837  61373.0  250000.0   \n",
       "3              UHF         Go off-air    126.107725  61373.0  250000.0   \n",
       "4              UHF         Go off-air     15.959957  61373.0  250000.0   \n",
       "\n",
       "   population  num_bidders   age  \n",
       "0    124346.0            6  44.8  \n",
       "1    124346.0            6  44.8  \n",
       "2    124346.0            6  44.8  \n",
       "3    124346.0            6  44.8  \n",
       "4    124346.0            6  44.8  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "withAge = bidPer.merge(ageCensus, how=\"inner\", on=\"zipcode\")\n",
    "withAge[\"income\"] = pd.to_numeric(withAge[\"income\"], errors=\"coerce\")\n",
    "\n",
    "withAge.to_csv(\"data/merged_bid_data.csv\")\n",
    "withAge.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>zipcode</th>\n",
       "      <th>State</th>\n",
       "      <th>dma</th>\n",
       "      <th>population</th>\n",
       "      <th>population_adult</th>\n",
       "      <th>age_median</th>\n",
       "      <th>population_child</th>\n",
       "      <th>computer_access</th>\n",
       "      <th>population_disabled</th>\n",
       "      <th>bachelors_higher_pct</th>\n",
       "      <th>...</th>\n",
       "      <th>obesity_pct</th>\n",
       "      <th>avg_house_age</th>\n",
       "      <th>median_hh_income</th>\n",
       "      <th>foodstamps</th>\n",
       "      <th>internet_access</th>\n",
       "      <th>poverty</th>\n",
       "      <th>Black</th>\n",
       "      <th>White</th>\n",
       "      <th>Female</th>\n",
       "      <th>Male</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>77494</td>\n",
       "      <td>TX</td>\n",
       "      <td>Houston TX</td>\n",
       "      <td>126310</td>\n",
       "      <td>0.666</td>\n",
       "      <td>36.1</td>\n",
       "      <td>42187</td>\n",
       "      <td>0.304</td>\n",
       "      <td>5883</td>\n",
       "      <td>0.628</td>\n",
       "      <td>...</td>\n",
       "      <td>0.282</td>\n",
       "      <td>15</td>\n",
       "      <td>168443</td>\n",
       "      <td>0.019</td>\n",
       "      <td>0.990</td>\n",
       "      <td>0.046</td>\n",
       "      <td>0.082</td>\n",
       "      <td>0.612</td>\n",
       "      <td>0.515</td>\n",
       "      <td>0.485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>77449</td>\n",
       "      <td>TX</td>\n",
       "      <td>Houston TX</td>\n",
       "      <td>123157</td>\n",
       "      <td>0.694</td>\n",
       "      <td>32.9</td>\n",
       "      <td>37670</td>\n",
       "      <td>0.304</td>\n",
       "      <td>9076</td>\n",
       "      <td>0.283</td>\n",
       "      <td>...</td>\n",
       "      <td>0.333</td>\n",
       "      <td>21</td>\n",
       "      <td>88516</td>\n",
       "      <td>0.107</td>\n",
       "      <td>0.984</td>\n",
       "      <td>0.077</td>\n",
       "      <td>0.224</td>\n",
       "      <td>0.515</td>\n",
       "      <td>0.522</td>\n",
       "      <td>0.478</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>75034</td>\n",
       "      <td>TX</td>\n",
       "      <td>Dallas-Ft. Worth TX</td>\n",
       "      <td>116155</td>\n",
       "      <td>0.717</td>\n",
       "      <td>37.0</td>\n",
       "      <td>32910</td>\n",
       "      <td>0.356</td>\n",
       "      <td>7101</td>\n",
       "      <td>0.617</td>\n",
       "      <td>...</td>\n",
       "      <td>0.310</td>\n",
       "      <td>18</td>\n",
       "      <td>153302</td>\n",
       "      <td>0.026</td>\n",
       "      <td>0.987</td>\n",
       "      <td>0.045</td>\n",
       "      <td>0.078</td>\n",
       "      <td>0.676</td>\n",
       "      <td>0.514</td>\n",
       "      <td>0.486</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>90011</td>\n",
       "      <td>CA</td>\n",
       "      <td>Los Angeles CA</td>\n",
       "      <td>110750</td>\n",
       "      <td>0.701</td>\n",
       "      <td>29.6</td>\n",
       "      <td>33081</td>\n",
       "      <td>0.224</td>\n",
       "      <td>10737</td>\n",
       "      <td>0.069</td>\n",
       "      <td>...</td>\n",
       "      <td>0.359</td>\n",
       "      <td>65</td>\n",
       "      <td>58009</td>\n",
       "      <td>0.272</td>\n",
       "      <td>0.905</td>\n",
       "      <td>0.271</td>\n",
       "      <td>0.068</td>\n",
       "      <td>0.361</td>\n",
       "      <td>0.487</td>\n",
       "      <td>0.513</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>75070</td>\n",
       "      <td>TX</td>\n",
       "      <td>Dallas-Ft. Worth TX</td>\n",
       "      <td>109085</td>\n",
       "      <td>0.710</td>\n",
       "      <td>37.4</td>\n",
       "      <td>31610</td>\n",
       "      <td>0.346</td>\n",
       "      <td>7012</td>\n",
       "      <td>0.567</td>\n",
       "      <td>...</td>\n",
       "      <td>0.313</td>\n",
       "      <td>19</td>\n",
       "      <td>130535</td>\n",
       "      <td>0.012</td>\n",
       "      <td>0.987</td>\n",
       "      <td>0.042</td>\n",
       "      <td>0.095</td>\n",
       "      <td>0.705</td>\n",
       "      <td>0.513</td>\n",
       "      <td>0.487</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   zipcode State                  dma  population  population_adult  \\\n",
       "0    77494    TX           Houston TX      126310             0.666   \n",
       "1    77449    TX           Houston TX      123157             0.694   \n",
       "2    75034    TX  Dallas-Ft. Worth TX      116155             0.717   \n",
       "3    90011    CA       Los Angeles CA      110750             0.701   \n",
       "4    75070    TX  Dallas-Ft. Worth TX      109085             0.710   \n",
       "\n",
       "   age_median  population_child  computer_access  population_disabled  \\\n",
       "0        36.1             42187            0.304                 5883   \n",
       "1        32.9             37670            0.304                 9076   \n",
       "2        37.0             32910            0.356                 7101   \n",
       "3        29.6             33081            0.224                10737   \n",
       "4        37.4             31610            0.346                 7012   \n",
       "\n",
       "   bachelors_higher_pct  ...  obesity_pct  avg_house_age  median_hh_income  \\\n",
       "0                 0.628  ...        0.282             15            168443   \n",
       "1                 0.283  ...        0.333             21             88516   \n",
       "2                 0.617  ...        0.310             18            153302   \n",
       "3                 0.069  ...        0.359             65             58009   \n",
       "4                 0.567  ...        0.313             19            130535   \n",
       "\n",
       "   foodstamps  internet_access  poverty  Black  White  Female   Male  \n",
       "0       0.019            0.990    0.046  0.082  0.612   0.515  0.485  \n",
       "1       0.107            0.984    0.077  0.224  0.515   0.522  0.478  \n",
       "2       0.026            0.987    0.045  0.078  0.676   0.514  0.486  \n",
       "3       0.272            0.905    0.271  0.068  0.361   0.487  0.513  \n",
       "4       0.012            0.987    0.042  0.095  0.705   0.513  0.487  \n",
       "\n",
       "[5 rows x 23 columns]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "every = (pd.read_excel(\"data/everyZip.xlsx\")\n",
    ")\n",
    "\n",
    "for c in every.columns:\n",
    "    if \"Unnamed\" in c: every = every.drop(c, axis=1)\n",
    "every.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "a0e1a6da8fdfbd8e8573f5b6deb86d22b24be091808eb94e3ca2f0153b1bbe18"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
